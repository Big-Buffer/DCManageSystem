<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dcmanagesystem.mapper.ViolateApplyMapper">
    <insert id="insertViolateApply" parameterType="com.example.dcmanagesystem.bean.ViolateApply">
        insert into normal.violate_apply(id_,customer_id,violate_reason,violate_level,remark,status,apply_date,apply_person,certificate_date,certificate_person)
        values(#{id_},#{customer_id},#{violate_reason},#{violate_level},#{remark},#{status},#{apply_date},#{apply_person},#{certificate_date},#{certificate_person})
    </insert>
    <select id="queryAllViolateApply" resultType="com.example.dcmanagesystem.bean.ViolateApply">
        select * from normal.violate_apply
    </select>
    <select id="queryViolateApplyById" parameterType="Integer" resultType="com.example.dcmanagesystem.bean.ViolateApply">
        select * from normal.violate_apply where id_=#{id_}
    </select>
    <update id="updateViolateApply" parameterType="com.example.dcmanagesystem.bean.ViolateApply">
        update normal.violate_apply set customer_id=#{customer_id},violate_reason=#{violate_reason},violate_level=#{violate_level},status=#{status},
                                        apply_date=#{apply_date},apply_person=#{apply_person},certificate_date=#{certificate_date},
                                        certificate_person=#{certificate_person}
        where id_=#{id_}
    </update>
    <delete id="deleteViolateApplyById" parameterType="Integer">
        delete from normal.violate_apply where id_=#{id_}
    </delete>

    <select id="queryViolateApplyByCustomerIds" parameterType="Integer" resultType="com.example.dcmanagesystem.bean.ViolateApply">
        select * from normal.violate_apply where 1=1
        <if test="customer_ids != null ">
            and
            <foreach collection="customer_ids" index="index" item="item" open="(" close=")" separator="or">
                <if test="item != null ">
                    customer_id = #{item}
                </if>
            </foreach>
        </if>
    </select>

    <select id="queryViolateApplyByViolateStatus" parameterType="Integer" resultType="com.example.dcmanagesystem.bean.ViolateApply">
        select * from normal.violate_apply where status=#{violate_status}
    </select>


    <select id="queryViolateApplyByViolateReason" parameterType="Integer" resultType="com.example.dcmanagesystem.bean.ViolateApply">
        select *
        from normal.violate_apply where 1=1
        <if test="reasons != null">
            and
            <foreach collection="reasons" index="index" item="item" open="(" separator="or" close=")">
                <if test="item != null and item != ''">
                    violate_reason like CONCAT('%',#{item},'%')
                </if>
            </foreach>
        </if>
    </select>


    <select id="queryViolateApplyByViolateLevel" parameterType="Integer" resultType="com.example.dcmanagesystem.bean.ViolateApply">
        select * from normal.violate_apply where violate_level=#{violate_level}
    </select>

    <select id="queryViolateApplyByApplyPerson" parameterType="String" resultType="com.example.dcmanagesystem.bean.ViolateApply">
        select * from normal.violate_apply where apply_person=#{apply_person}
    </select>

    <select id="queryLastViolateApplyByCustomerId" parameterType="Integer" resultType="com.example.dcmanagesystem.bean.ViolateApply">
        select * from normal.violate_apply where customer_id=#{customer_id} order by id_ desc limit 1
    </select>

</mapper>